# SCsub
Import('env')

env.add_source_files(env.modules_sources,"*.cpp") # Add all cpp files to the build
env.Append(CPPPATH="#modules/firebase")

if env['platform'] == 'android':
    if env['android_arch'] == 'armv6':
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_app.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_analytics.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_remote_config.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_database.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_auth.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_admob.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_functions.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi/c++/libfirebase_messaging.a")])
    elif env['android_arch'] == 'armv7':
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_app.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_analytics.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_remote_config.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_database.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_auth.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_admob.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_functions.a")])
        env.Prepend(LIBS=[File("libs/android/armeabi-v7a/c++/libfirebase_messaging.a")])
    elif env['android_arch'] == 'arm64v8':
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_app.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_analytics.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_remote_config.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_database.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_auth.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_admob.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_functions.a")])
        env.Prepend(LIBS=[File("libs/android/arm64-v8a/c++/libfirebase_messaging.a")])
    elif env['android_arch'] == 'x86':
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_app.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_analytics.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_remote_config.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_database.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_auth.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_admob.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_functions.a")])
        env.Prepend(LIBS=[File("libs/android/x86/c++/libfirebase_messaging.a")])
    elif env['android_arch'] == 'x86_64':
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_app.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_analytics.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_remote_config.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_database.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_auth.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_admob.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_functions.a")])
        env.Prepend(LIBS=[File("libs/android/x86_64/c++/libfirebase_messaging.a")])
    else:
        print 'WARN: Unsupported architecture for firebase module: '+env['android_arch']
elif env['platform'] == 'iphone':
    env.Append(CXXFLAGS=['-std=c++11'])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_app.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_analytics.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_remote_config.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_database.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_auth.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_admob.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_functions.a")])
    env.Prepend(LIBS=[File("libs/ios/universal/libfirebase_messaging.a")])
    
